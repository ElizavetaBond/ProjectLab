@{
    ViewData["Title"] = "Каталог проектов";
    @model IEnumerable<ProjectCardViewModel>
}

    <ul class="cards clearfix">
        @foreach (var x in Model)
        {
            <li class="card-wrapper">
                <div class="card" style="height: 500px;">
                    @await Component.InvokeAsync("ProjectCard", new { vm = x })
                    @if (User.Identity.IsAuthenticated)
                    {
                        @if (x.IsParticipant && !x.IsManager)
                        {
                             @using (Html.BeginForm("LeaveProject", "Project", FormMethod.Post))
                             {
                                <input type="hidden" name="ProjectId" value="@x.Id" />
                                <button class="btn btn-primary card-btn-public" type="submit">
                                    Покинуть проект
                                </button>
                             }
                        }
                        else if (!x.IsParticipant && x.ProjectType == "Открытый")
                        {
                            @using (Html.BeginForm("AddParticipant", "Project", FormMethod.Post))
                            {
                                <input type="hidden" name="ProjectId" value="@x.Id" />
                                <input type="hidden" name="UserId" value="@User.Identity.Name" />
                                <button class="btn btn-primary card-btn-public" type="submit">
                                    Принять участие
                                </button>
                            }
                        } 
                    }
                </div>
            </li>
        }
    </ul>

